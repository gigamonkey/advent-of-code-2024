#!/bin/bash

set -euo pipefail

root="https://bhs-cs.gigamonkeys.com/starter-kits"

function usage {
    echo "To create a new project, run this script with either one or two arguments:"
    echo ""
    echo "  $0 NAME"
    echo ""
    echo "Makes a project named NAME from the kit named NAME."
    echo ""
    echo "  $0 PROJECT KIT"
    echo ""
    echo "Makes a project named PROJECT from the kit named KIT."
    echo ""
    echo "To list the available kits:"
    echo ""
    echo "  $0 --list"
    echo ""
    exit 1
}

help=''
list=''
off_menu=''

args=()


while [[ $# -gt 0 ]]; do
    case $1 in
        --help) help='yes'; shift ;;
        --list) list='yes'; shift ;;
        --off-menu) off_menu='yes'; shift ;;
        --*) echo "Unknown option: $1"; exit 1 ;;
        *) args+=("$1"); shift ;;
    esac
done

if [ "$list" = "yes" ]; then
    curl -sS "$root/kits.txt"
    exit 0
fi

if ((${#args[*]} < 1)) || [ "$help" = "yes" ]; then
    usage
fi

if ((${#args[*]} > 2)); then
    echo "Too many arguments. Did you use a name with spaces in it?"
    exit 1
fi

if [ "$(git branch --show-current)" != "main" ]; then
    echo "Must start projects from main branch."
    exit 1
fi

# The project name
name="${args[0]}"

# The kit name. If only one name is provided the project is named for the kit
kit="${args[1]:-$name}"

# Directory and branch where project will live
proj="projects/$name"

if ! curl -sS "$root/kits.txt" | egrep "^$kit " > /dev/null; then
    if [ "$off_menu" != "yes" ]; then
        echo "$kit is not a kit."
        echo ""
        curl -sS "$root/kits.txt"
        exit 1
    fi
fi

if [ -e "$proj" ]; then
    echo "Project directory $proj already exists!"
    exit 1
fi

if git show-ref --verify --quiet "refs/heads/$proj"; then
    echo "Project branch $proj already exists!"
    exit 1
fi

# Make the project branch
git switch -c "$proj"

# Make the project directory
mkdir -p "$proj"

# Download the starter code
cd "$proj"
tmp=$(mktemp)
curl --fail "$root/$kit.tgz" > "$tmp"
tar xzf "$tmp"

# Post download initialization depends on what's in the kit. So far only node
# kits need anything.
if [ -e 'package.json' ]; then
    npm install
fi

# Commit the starter code
git add .
git commit -m "Starting project $name with starter code from $kit."
